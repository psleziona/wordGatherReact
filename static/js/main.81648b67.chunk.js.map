{"version":3,"sources":["Nav.js","Main.js","QuickRound.js","QuickRoundContainer.js","TestAnswer.js","TestObject.js","TestContainer.js","TestMulti.js","ProgressBar.js","StatsContainer.js","StatsPage.js","LoginPage.js","App.js","index.js"],"names":["Nav","className","to","Component","Main","QuickRound","getWord","showAnswer","setState","prevState","answers","state","word","fetch","credentials","then","res","json","data","translates","meaning","wordCounter","wrongCounter","showAnswerBtn","handleInput","e","key","answer","target","value","handleAnswer","checkShowAnswer","includes","rightCounter","handleNext","finishRound","props","handleTest","this","gatherData","onClick","htmlFor","onKeyDown","name","map","elem","i","QuickRoundContainer","finishTest","testStarted","total","length","right","reduce","sum","Object","values","handleUpdateDb","stats","method","mode","body","JSON","stringify","console","log","startTest","TestAnswer","handleClick","isTrue","onAnswer","innerText","isAnsweredRight","prevProps","answerable","prvState","bgClass","TestObject","isRight","rightAnswer","TestContainer","notAnswered","tests","forEach","english_word","filter","obj","push","updateStatus","status","handleSend","nextProps","right_answers","false_answers","Math","floor","random","sort","TestMulti","getData","count","testArray","isDataSend","countValue","handleChange","clearDataAfterUpdate","onChange","ProgressBar","percentageProgress","progress","toFixed","style","width","StatsContainer","counter","StatsPage","getstats","LoginPage","handleSubmit","preventDefault","form","FormData","append","type","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81648b67.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport './Nav.scss';\n\nclass Nav extends Component {\n    constructor() {\n        super();\n    }\n\n    render() {\n        return (\n            <nav className='nav'>\n                <ul className='nav__links'>\n                    <Link className='nav__anchor' to='/'>\n                        <li className='nav__link'>Home</li>\n                    </Link>\n                    <Link className='nav__anchor' to='/quick_round'>\n                        <li className='nav__link'>Quick</li>\n                    </Link>\n                    <Link className='nav__anchor' to='/test_multi'>\n                        <li className='nav__link'>Multi test</li>\n                    </Link>\n                    <Link className='nav__anchor' to='/stats'>\n                        <li className='nav__link'>Stats</li>\n                    </Link>\n                    <Link className='nav__anchor' to='/login'>\n                        <li className='nav__link'>Login</li>\n                    </Link>\n                    \n                </ul>\n            </nav>\n        )\n    }\n\n\n}\n\nexport default Nav;","import { Component } from \"react\";\n\nclass Main extends Component {\n    constructor() {\n        super();\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Witaj</h2>\n            </div>\n        );\n    }\n}\n\nexport default Main;","import { Component } from \"react\";\n\nclass QuickRound extends Component {\n    constructor() {\n        super();\n        this.state = {\n            word: '',\n            translates: [],\n            rightCounter: 0,\n            wordCounter: 0,\n            wrongCounter: 0,\n            showAnswerBtn: false,\n            showAnswer: false,\n            answers: []\n        }\n    }\n\n    getWord = () => {\n        if (this.showAnswer) {\n            this.setState(prevState => {\n                return {\n                    answers: [...prevState.answers, { [this.state.word]: false }]\n                }\n            });\n        }\n        fetch('https://word-gather.herokuapp.com/word', {\n            credentials: 'include'\n        })\n            .then(res => res.json())\n            .then(data => {\n                this.setState(prevState => {\n                    return {\n                        word: data.word,\n                        translates: data.meaning,\n                        wordCounter: prevState.wordCounter + 1,\n                        wrongCounter: 0,\n                        showAnswerBtn: false,\n                        showAnswer: false\n                    }\n                })\n            });\n    }\n\n    handleInput = e => {\n        if (e.key == 'Enter') {\n            const answer = e.target.value;\n            if (this.handleAnswer(answer)) {\n                e.target.value = '';\n                this.getWord()\n            } else {\n                this.setState(prevState => {\n                    return {\n                        wrongCounter: prevState.wrongCounter + 1\n                    }\n                }, this.checkShowAnswer)\n            }\n        }\n    }\n\n    checkShowAnswer = () => {\n        if (this.state.wrongCounter == 3) {\n            this.setState({\n                showAnswerBtn: true\n            });\n        }\n    }\n\n    handleAnswer = answer => {\n        if (this.state.translates.includes(answer)) {\n            if (!this.state.showAnswer) {\n                this.setState(prevState => {\n                    return {\n                        rightCounter: prevState.rightCounter + 1,\n                        answers: [...prevState.answers, { [this.state.word]: true }]\n                    }\n                });\n            }\n            return true;\n        }\n    }\n\n    handleNext = () => {\n        this.setState(prevState => {\n            return {\n                answers: [...prevState.answers, { [this.state.word]: false }]\n            }\n        });\n        this.getWord();\n    }\n\n    componentDidMount() {\n        this.getWord();\n    }\n\n    finishRound = () => {\n        this.props.handleTest();\n    }\n\n    componentWillUnmount() {\n        const answers = this.state.answers\n        this.props.gatherData(answers);\n    }   \n\n    render() {\n        return (\n            <div>\n                <button onClick={this.finishRound}>Finish</button>\n                <button onClick={this.handleNext}>Next</button>\n                <ul>\n                    <li>{this.state.word}</li>\n                    <li>Total words: {this.state.wordCounter}</li>\n                    <li>Right answers: {this.state.rightCounter}</li>\n                    {this.state.wrongCounter > 0 ? <li>Wrong on current word: {this.state.wrongCounter}</li> : null}\n                </ul>\n                <label htmlFor='answer'>\n                    <input onKeyDown={this.handleInput} name='answer' />\n                </label>\n                {this.state.showAnswerBtn ?\n                    <button onClick={() => { this.setState({ showAnswer: true }) }}>Pokaz znaczenia</button> : null}\n                {this.state.showAnswer &&\n                    <ul>\n                        {this.state.translates.map((elem, i) => {\n                            return <li key={i}>{elem}</li>\n                        })}\n                    </ul>\n                }\n            </div>\n        )\n    }\n}\n\nexport default QuickRound;","import { Component } from 'react';\nimport QuickRound from './QuickRound';\n\nclass QuickRoundContainer extends Component {\n    constructor() {\n        super();\n        this.state = {\n            testStarted: false,\n            total: 0,\n            right: 0\n        }\n    }\n\n    finishTest = () => {\n        this.setState({\n            testStarted: false\n        })\n    }\n\n    gatherData = answers => {\n        const total = answers.length;\n        const right = answers.reduce((sum, elem) => {\n            const isRight = Object.values(elem)[0]\n            return isRight?sum + 1:sum\n        }, 0)\n        this.handleUpdateDb(answers);\n        this.setState({\n            total,\n            right\n        })\n    }\n\n    handleUpdateDb = stats => {\n        fetch('https://word-gather.herokuapp.com/words', {\n            method: 'POST',\n            mode: 'cors',\n            body: JSON.stringify(stats),\n            credentials: 'include'\n        })\n        .then(res => console.log(res))\n    }\n\n    startTest = () => {\n        this.setState({\n            testStarted: true\n        })\n    }\n\n    render() {\n        if (this.state.testStarted) {\n            return <QuickRound handleTest={this.finishTest} gatherData={this.gatherData}/>\n        } else {\n            return (\n                <div>\n                    <button onClick={this.startTest}>Start</button>\n                    {this.state.total > 0 &&\n                    <div>\n                        <p>Total {this.state.total}</p>\n                        <p>Right {this.state.right}</p>\n                    </div>\n                    }\n                </div>\n            )\n        }\n    }\n}\n\nexport default QuickRoundContainer;","import { Component } from \"react\";\nimport './TestAnswer.scss'\n\nclass TestAnswer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isAnsweredRight: null\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.answerable == false && this.props.answerable == true) {\n            this.setState(prvState => {\n                return {\n                    isAnsweredRight: null\n                }\n            })\n        }\n    }\n\n    handleClick = e => {\n        const isTrue = this.props.onAnswer(e.target.innerText);\n        console.log(isTrue);\n        if (isTrue) {\n            this.setState(prevState => {\n                return {\n                    isAnsweredRight: true\n                }\n            })\n        } else {\n            this.setState(prevState => {\n                return {\n                    isAnsweredRight: false\n                }\n            })\n        }\n    }\n\n    render() {\n        const answerable = this.props.answerable;\n        let bgClass = '';\n        if (this.state.isAnsweredRight) {\n            bgClass = 'right';\n        } else if (this.state.isAnsweredRight == false) {\n            bgClass = 'wrong';\n        }\n        return (\n            <li className={`list-item ${bgClass}`}\n                onClick={answerable ? this.handleClick : null}>{this.props.answer}</li>\n        )\n    }\n}\n\nexport default TestAnswer;","import { Component } from \"react\";\nimport './TestObject.scss'\nimport TestAnswer from './TestAnswer';\n\nclass TestObject extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            answerable: true\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.rightAnswer !== this.props.rightAnswer) {\n            this.setState(prevState => {\n                return {\n                    answerable: true\n                }\n            })\n        }\n    }\n\n    handleAnswer = answer => {\n        this.setState(prevState => {\n            return {\n                answerable: false\n            }\n        })\n        const isRight = answer == this.props.rightAnswer ? true : false;\n        this.props.onAnswer(this.props.word, isRight);\n        return isRight\n    }\n\n    render() {\n        return (\n            <div>\n                <h4 className='guess-word'>{this.props.word}</h4>\n                <ul className='answer-list'>\n                    {this.props.answers.map((answer, i) => <TestAnswer\n                        onAnswer={this.handleAnswer}\n                        key={i} answer={answer} answerable={this.state.answerable} />)}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default TestObject;","import { Component } from \"react\";\nimport TestObject from \"./TestObject\";\n\nclass TestContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            answers: []\n        }\n    }\n\n\n    gatherData = (word, right) => {\n        this.setState(prevState => {\n            return {\n                answers: [...prevState.answers, { [word]: right }]\n            }\n        })\n    }\n\n\n    shouldComponentUpdate(nextProps) {\n        if (nextProps.tests == this.props.tests) {\n            return false;\n        }\n        return true;\n    }\n\n    \n    \n\n    handleClick = () => {\n        let notAnswered = [];\n        this.props.tests.forEach(elem => {\n            let word = elem.english_word;\n            let x = this.state.answers.filter((obj) => {\n                return word in obj;\n            });\n            if (x.length == 0) {\n                notAnswered.push({ [word]: false })\n            }\n        });\n        this.setState(prevState => {\n            return {\n                answers: [...prevState.answers, ...notAnswered]\n            }\n        }, this.updateStatus)\n    }\n\n    updateStatus = () => {\n        fetch('https://word-gather.herokuapp.com/words', {\n            method: 'POST',\n            body: JSON.stringify(this.state.answers),\n            credentials: 'include',\n            mode: 'cors'\n        })\n            .then(res => {\n                if (res.status == 200) {\n                    this.props.handleSend();\n                }\n            })\n    }\n\n\n    render() {\n        const tests = this.props.tests.map((elem, i) => {\n            const { english_word, right_answers, false_answers } = elem;\n            const rightAnswer = right_answers[Math.floor(Math.random() * right_answers.length)];\n            let answers = [rightAnswer, ...false_answers];\n            answers = answers.sort(() => Math.random() - .5);\n            return (\n                <TestObject key={i} word={english_word}\n                    answers={answers} rightAnswer={rightAnswer} onAnswer={this.gatherData} />\n            )\n        })\n\n        \n\n        return (\n            <div>\n                {tests}\n                <button onClick={this.handleClick}>Finish</button>\n            </div>\n        )\n    }\n}\n\nexport default TestContainer;","import { Component } from \"react\";\nimport TestContainer from \"./TestContainer\";\n\nclass TestMulti extends Component {\n    constructor() {\n        super();\n        this.state = {\n            countValue: '5',\n            testArray: [],\n            isDataSend: false\n        }\n    }\n\n    getData = count => {\n        fetch(`https://word-gather.herokuapp.com/words/${count}`, {\n            credentials: 'include'\n        })\n        .then(res => res.json())\n        .then(data => {\n            this.setState({\n                testArray: data,\n                isDataSend: false\n            });\n        });\n    }\n\n    handleClick = () => {\n        this.getData(this.state.countValue);\n    }\n\n    handleChange = e => {\n        this.setState({\n            countValue: e.target.value\n        });\n    }\n\n    clearDataAfterUpdate = () => {\n        this.setState({\n            testArray: [],\n            isDataSend: true\n        });\n    }\n\n\n    render() {\n        if (this.state.testArray.length == 0) {        \n        return (\n            <div>\n                {this.state.isDataSend?<p>Answer send</p>:null}\n                <p>Wybierz ilosc slowek</p>\n                <select onChange={this.handleChange}>\n                    <option value='5'>5</option>\n                    <option value='10'>10</option>\n                    <option value='20'>20</option>\n                </select>\n                <button onClick={this.handleClick}>Start</button>\n            </div>\n        )\n        } else {\n            return <TestContainer tests={this.state.testArray} handleSend={this.clearDataAfterUpdate} />\n        }\n    }\n}\n\nexport default TestMulti;","import { Component } from \"react\";\nimport './ProgressBar.scss'\n\nclass ProgressBar extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const percentageProgress = (this.props.progress * 100).toFixed(2) //%\n        return (\n            <div className='progress-bar'>\n                <p className='progress-text'>{percentageProgress} %</p>\n                <div style={{width: `${percentageProgress}%`}} className='show-progress'></div>\n            </div>\n        )\n    }\n}\n\nexport default ProgressBar;","import { Component } from \"react\";\nimport ProgressBar from './ProgressBar';\n\nclass StatsContainer extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <ul>\n                <li>{this.props.word}</li>\n                <li>Showed: {this.props.counter} times</li>\n                <ProgressBar progress={this.props.progress} />\n            </ul>\n        )\n    }\n}\n\nexport default StatsContainer;","import { Component } from \"react\";\nimport StatsContainer from './StatsContainer';\n\nclass StatsPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            stats: []\n        }\n    }\n\n    getstats = () => {\n        fetch('https://word-gather.herokuapp.com/words/stats', {\n            credentials: 'include'\n        })\n        .then(res => res.json())\n        .then(data => this.setState({\n            stats: data\n        }))\n    }\n\n    componentDidMount() {\n        this.getstats();\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.stats && \n                this.state.stats.map((elem, i) => {\n                    return <StatsContainer key={i} word={elem.word} counter={elem.counter} progress={elem.progress} />\n                })\n                }\n            </div>\n        )\n    }\n}\n\nexport default StatsPage;","import { Component } from \"react\";\n\nclass LoginPage extends Component {\n    constructor() {\n        super();\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        let form = new FormData()\n        form.append('name', 'pablo')\n        fetch('https://word-gather.herokuapp.com/login', {\n            method: 'POST',\n            body: form,\n            credentials: 'include'\n        })\n        .then(res => console.log(res))\n    }\n\n    render() {\n        return (\n            <form>\n                <label htmlFor='name'>\n                    <input name='name' />\n                </label>\n                <label htmlFor='submit'>\n                    <input type='submit' name='submit' value='Login' onClick={this.handleSubmit}/>\n                </label>\n            </form>\n        )\n    }\n}\n\nexport default LoginPage;","import './App.scss';\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Nav from './Nav';\nimport Main from './Main';\nimport QuickRoundContainer from './QuickRoundContainer';\nimport TestMulti from './TestMulti';\nimport StatsPage from './StatsPage';\nimport LoginPage from './LoginPage';\n\nclass App extends Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className='container'>\n          <Nav />\n          <Switch>\n            <Route path='/' exact component={Main} />\n            <Route path='/quick_round' component={QuickRoundContainer} />\n            <Route path='/test_multi' component={TestMulti} />\n            <Route path='/stats' component={StatsPage} />\n            <Route path='/login' component={LoginPage} />\n          </Switch>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}